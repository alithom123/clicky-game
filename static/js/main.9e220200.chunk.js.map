{"version":3,"sources":["components/Card/index.jsx","components/Game/index.jsx","components/Jumbotron/index.jsx","components/Navbar/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Card","props","react_default","a","createElement","className","src","imageUrl","href","onClick","handleCardClick","id","clickCount","Game","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hcc","event","_event$target","target","clickcount","console","log","concat","handleInputChange","_event$target2","handleFormSubmit","preventDefault","alert","state","username","password","setState","cardsArray","shuffledCardsArray","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","cardId","map","card","index","components_Card","React","Component","Jumbotron","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","aria-haspopup","aria-labelledby","type","placeholder","App","components_Navbar","components_Jumbotron","components_Game","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9e220200.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props) {\n    return (\n        <div>\n            <div className=\"click-item\" >\n                <img className=\"card-img-top\" src={props.imageUrl} />\n                <div className=\"card-body\">\n                    {/* <h5 className=\"card-title\">Card title</h5> */}\n                    {/* <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p> */}\n                    <a href=\"#\" className=\"btn btn-primary\" onClick={props.handleCardClick} id={props.id} clickCount={props.clickCount}>Click this card</a>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"../Card/index.jsx\";\n\n// You can convert a function component like Clock to a class in five steps:\n\n// Create an ES6 class, with the same name, that extends React.Component.\n\n// Add a single empty method to it called render().\n\n// Move the body of the function into the render() method.\n\n// Replace props with this.props in the render() body.\n\n// Delete the remaining empty function declaration.\n\n// class Clock extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//         <h1>Hello, world!</h1>\n//         <h2>It is {this.props.date.toLocaleTimeString()}.</h2>\n//       </div>\n//     );\n//   }\n// }\n\n\nclass Game extends React.Component {\n\n  /* Constructor Start */\n  constructor(props) {\n    super(props);\n\n    /* Utility function to shuffle */\n    function shuffle(array) {\n      var currentIndex = array.length,\n        temporaryValue, randomIndex;\n\n      // While there remain elements to shuffle...\n      while (0 !== currentIndex) {\n\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    }\n\n    var cardsArray = [{\n      id: 1,\n      imageUrl: \"/1.jpg\",\n      clickCount: 0\n    },\n    {\n      id: 2,\n      imageUrl: \"/2.jpg\",\n      clickCount: 0\n    },\n    {\n      id: 3,\n      imageUrl: \"/3.jpg\",\n      clickCount: 0\n    },\n    {\n      id: 4,\n      imageUrl: \"/4.jpg\",\n      clickCount: 0\n    },\n    {\n      id: 5,\n      imageUrl: \"/5.jpg\",\n      clickCount: 0\n    },\n    {\n      id: 6,\n      imageUrl: \"/6.jpg\",\n      clickCount: 0\n    },\n    {\n      id: 7,\n      imageUrl: \"/7.jpg\",\n      clickCount: 0\n    },\n    {\n      id: 8,\n      imageUrl: \"/8.jpg\",\n      clickCount: 0\n    },\n    {\n      id: 9,\n      imageUrl: \"/9.jpg\",\n      clickCount: 0\n    },\n    ];\n\n    var shuffledCardsArray = shuffle(cardsArray);\n    console.log(\"shuffledCardsArray: \", shuffledCardsArray);\n\n    this.state = {\n      cardsArray: cardsArray\n    };\n  };\n  /* Constructor End */\n\n  componentDidMount() { }\n\n  componentWillUnmount() { }\n\n  // tick() {\n  //   this.setState({\n  //     date: new Date()\n  //   });\n  // }\n\n  handleCardClick(cardId) {\n    // this.setState({ x: \"X\" });\n    console.log(\"handleCardClick running\");\n    console.log(cardId);\n  };\n\n  hcc = event => {\n    const { id, clickcount } = event.target;\n    console.log(event);\n    console.log(`id = ${id}`);\n    console.log(`clickCount = ${clickcount}`);\n  }\n\n  // handle any changes to the input fields\n  handleInputChange = event => {\n    // Pull the name and value properties off of the event.target (the element which triggered the event)\n    const { id, clickcount } = event.target;\n\n    console.log(`id = ${id}`);\n    console.log(`clickCount = ${clickcount}`);\n\n    // Set the state for the appropriate input field\n    // this.setState({\n    //   [name]: value\n    // });\n  };\n\n  // When the form is submitted, prevent the default event and alert the username and password\n  handleFormSubmit = event => {\n    event.preventDefault();\n    alert(`Username: ${this.state.username}\\nPassword: ${this.state.password}`);\n    this.setState({ username: \"\", password: \"\" });\n  };\n\n  render() {\n    return (\n      <div className=\"App\" > {\n        \n        this.state.cardsArray.map(function (card, index) {\n          return <Card imageUrl={\n            card.imageUrl\n          }\n            id={\n              card.id\n            }\n            clickCount={\n              card.clickCount\n            }\n            handleCardClick={\n              this.hcc\n            }\n          />\n        }, this)\n      }\n      </div>\n    );\n  }\n}\n\n\nexport default Game;","import React from \"react\";\n\nfunction Jumbotron() {\n    return (\n        <div className=\"jumbotron\">\n            <h1>Clicky Game</h1>\n            <p>Play the clicky memory game! Click the same image twice and you lose! Don't ... and you win!</p>\n        </div>\n    );\n}\n\nexport default Jumbotron;","import React from \"react\";\n\nfunction Navbar() {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a className=\"navbar-brand\" href=\"#\">\n                Navbar\n      </a>\n            <button\n                className=\"navbar-toggler\"\n                data-toggle=\"collapse\"\n                data-target=\"#navbarSupportedContent\"\n                aria-controls=\"navbarSupportedContent\"\n                aria-expanded=\"false\"\n                aria-label=\"Toggle navigation\"\n            >\n                <span className=\"navbar-toggler-icon\" />\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item active\">\n                        <a className=\"nav-link\" href=\"#\">\n                            Home <span className=\"sr-only\">(current)</span>\n                        </a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\">\n                            Link\n            </a>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <a\n                            className=\"nav-link dropdown-toggle\"\n                            href=\"#\"\n                            id=\"navbarDropdown\"\n                            role=\"button\"\n                            data-toggle=\"dropdown\"\n                            aria-haspopup=\"true\"\n                            aria-expanded=\"false\"\n                        >\n                            Dropdown\n            </a>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                            <a className=\"dropdown-item\" href=\"#\">\n                                Action\n              </a>\n                            <a className=\"dropdown-item\" href=\"#\">\n                                Another action\n              </a>\n                            <div className=\"dropdown-divider\" />\n                            <a className=\"dropdown-item\" href=\"#\">\n                                Something else here\n              </a>\n                        </div>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link disabled\" href=\"#\">\n                            Disabled\n            </a>\n                    </li>\n                </ul>\n                <form className=\"form-inline my-2 my-lg-0\">\n                    <input\n                        className=\"form-control mr-sm-2\"\n                        type=\"search\"\n                        placeholder=\"Search\"\n                        aria-label=\"Search\"\n                    />\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">\n                        Search\n          </button>\n                </form>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;","import React from 'react';\nimport './App.css';\nimport Game from \"./components/Game/index.jsx\";\nimport Jumbotron from './components/Jumbotron';\nimport Navbar from './components/Navbar'\n\nfunction App() {\n\n  var cardsArray = [{\n    id: 1,\n    imageUrl: \"/1.jpg\",\n    clickCount: 0\n  },\n  {\n    id: 2,\n    imageUrl: \"/2.jpg\",\n    clickCount: 0\n  },\n  {\n    id: 3,\n    imageUrl: \"/3.jpg\",\n    clickCount: 0\n  },\n  {\n    id: 4,\n    imageUrl: \"/4.jpg\",\n    clickCount: 0\n  },\n  {\n    id: 5,\n    imageUrl: \"/5.jpg\",\n    clickCount: 0\n  },\n  {\n    id: 6,\n    imageUrl: \"/6.jpg\",\n    clickCount: 0\n  },\n  {\n    id: 7,\n    imageUrl: \"/7.jpg\",\n    clickCount: 0\n  },\n  {\n    id: 8,\n    imageUrl: \"/8.jpg\",\n    clickCount: 0\n  },\n  {\n    id: 9,\n    imageUrl: \"/9.jpg\",\n    clickCount: 0\n  },\n  ];\n\n  function shuffle(array) {\n    var currentIndex = array.length,\n      temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  var shuffledCardsArray = shuffle(cardsArray);\n  console.log(\"shuffledCardsArray: \", shuffledCardsArray);\n\n  var handleCardClick = function () {\n    console.log(\"handleCardClick running\");\n  }\n\n\n  return (\n    <div className=\"App\" >\n      <Navbar />\n      <Jumbotron />\n      <div className=\"container\">\n        <Game />\n      </div>\n    </div>\n  )\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}